// Automatically generated by MockGen. DO NOT EDIT!
// Source: twunproxy.go

package twunproxy

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of Conn interface
type MockConn struct {
	ctrl     *gomock.Controller
	recorder *_MockConnRecorder
}

// Recorder for MockConn (not exported)
type _MockConnRecorder struct {
	mock *MockConn
}

func NewMockConn(ctrl *gomock.Controller) *MockConn {
	mock := &MockConn{ctrl: ctrl}
	mock.recorder = &_MockConnRecorder{mock}
	return mock
}

func (_m *MockConn) EXPECT() *_MockConnRecorder {
	return _m.recorder
}

func (_m *MockConn) Close() error {
	ret := _m.ctrl.Call(_m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockConnRecorder) Close() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Close")
}

func (_m *MockConn) Do(commandName string, args ...interface{}) (interface{}, error) {
	_s := []interface{}{commandName}
	for _, _x := range args {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "Do", _s...)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockConnRecorder) Do(arg0 interface{}, arg1 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0}, arg1...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Do", _s...)
}

// Mock of ConnGetter interface
type MockConnGetter struct {
	ctrl     *gomock.Controller
	recorder *_MockConnGetterRecorder
}

// Recorder for MockConnGetter (not exported)
type _MockConnGetterRecorder struct {
	mock *MockConnGetter
}

func NewMockConnGetter(ctrl *gomock.Controller) *MockConnGetter {
	mock := &MockConnGetter{ctrl: ctrl}
	mock.recorder = &_MockConnGetterRecorder{mock}
	return mock
}

func (_m *MockConnGetter) EXPECT() *_MockConnGetterRecorder {
	return _m.recorder
}

func (_m *MockConnGetter) Get() Conn {
	ret := _m.ctrl.Call(_m, "Get")
	ret0, _ := ret[0].(Conn)
	return ret0
}

func (_mr *_MockConnGetterRecorder) Get() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Get")
}
